@model XinkRealEstate.Models.Category
@using XinkRealEstate.Models

@{
    ViewBag.Title = "Edit category";
    ViewBag.PageDescription = Html.ActionLink("Back to List", "Index");
}



<div class="box">
    <div class="box-header with-border">
        @*<h3 class="box-title">Quick Example</h3>*@
    </div>
    <!-- /.box-header -->
    <!-- form start -->
    @using (Html.BeginForm())
            {
        @Html.AntiForgeryToken()
        <div class="box-body">
            <div class="row">
                <div class="col-md-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name)
                        <div>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description)
                        <div>
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.Visible, new { @checked = "checked" })
                            @Html.NameFor(model => model.Visible)
                        </label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DisplayOrder)
                        <div>
                            @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control", @Min = "0" } })
                            @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Code)
                        <div>
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="hide">
                        @Html.HiddenFor(model => model.CreateOn)
                        @Html.HiddenFor(model => model.UpdateOn)
                        @Html.HiddenFor(model => model.PictureId)
                        @Html.HiddenFor(model => model.Level)
                        @Html.HiddenFor(model => model.ParentCategoryId)
                    </div>
                </div>
            </div>
        </div>
        <div class="box-footer">
            <input type="submit" value="Save" class="btn btn-primary pull-right"/>
        </div>
    }
</div>



<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
