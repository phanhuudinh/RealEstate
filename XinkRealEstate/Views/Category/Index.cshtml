@model IEnumerable<XinkRealEstate.Models.Category>

@{
    ViewBag.Title = "Categories";
}

@section stylesheet{
    @Styles.Render("~/AdminLTE/css/dataTables")
}
<div class="box">
    <div class="box-header">
        <h3 class="box-title">Hover Data Table</h3>
    </div>
    <div class="box-body">
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
        <table class="table table-bordered table-hover" id="example"></table>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/AdminLTE/js/dataTables")
    <script>
        var columns = [
            {
                title: '@Html.DisplayNameFor(model => model.Id)',
                target: 0,
                className: 'treegrid-control',
                mData: "id",
                visible: false
            }, {
                title: '@Html.DisplayNameFor(model => model.Name)',
                target: 1,
                mData: "name"
            }, {
                title: '@Html.DisplayNameFor(model => model.Level)',
                target: 2,
                mData: "level"
            }, {
                title: '@Html.DisplayNameFor(model => model.ParentCategoryId)',
                target: 3,
                mData: "parentCategoryId"
            }, {
                title: '@Html.DisplayNameFor(model => model.PictureId)',
                target: 4,
                mData: "pictureId"
            }, {
                title: '@Html.DisplayNameFor(model => model.Description)',
                target: 5,
                mData: "description"
            }, {
                title: '@Html.DisplayNameFor(model => model.DisplayOrder)',
                target: 6,
                mData: "displayOrder"
            }, {
                title: '@Html.DisplayNameFor(model => model.Code)',
                target: 7,
                mData: "code"
            }, {
                title: '@Html.DisplayNameFor(model => model.CreateOn)',
                target: 8,
                mData: "createOn"
            }, {
                title: '@Html.DisplayNameFor(model => model.UpdateOn)',
                target: 9,
                mData: "updateOn"
            }, {
                target: 1,
                data: function (d) {
                    console.log(d)
                    let edit = '@Html.ActionLink("Edit", "Edit", new { id = "replaceId" })'.replace('replaceId',d.id)
                    let detail = '@Html.ActionLink("Details", "Details", new { id = "replaceId" })'.replace('replaceId',d.id)
                    let del = '@Html.ActionLink("Delete", "Delete", new { id = "replaceId" })'.replace('replaceId',d.id)
                    return `${edit}|${detail}|${del}`
                }
            }
        ];

        $(document).ready(function () {
            $('#example').DataTable({
                'select': {
                    'style': 'multi',
                    'selector': 'td:not(:first-child)'
                },
                "ordering": false,
                "processing": true,
                "serverSide": true,
                "pageLength": 1,
                'columns': columns,
                'ajax': {
                    type: "POST",
                    contentType: "application/json",
                    url: '/Category/GetDataTable',
                    data: function (d) {
                        // note: d is created by datatable, the structure of d is the same with DataTableParameters model above
                        console.log(JSON.stringify(d));
                        return JSON.stringify(d);
                    }
                },
                'treeGrid': {
                    'left': 10,
                    'expandIcon': '&lt;span&gt;+&lt;/span&gt;',
                    'collapseIcon': '&lt;span&gt;-&lt;/span&gt;'
                }
            });
        });
    </script>
}
